<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"     
 	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"    
    xmlns:jaxrs="http://cxf.apache.org/jaxrs" xmlns:httpj="http://cxf.apache.org/transports/http-jetty/configuration"
    xmlns:http="http://cxf.apache.org/transports/http/configuration"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context
     					http://www.springframework.org/schema/context/spring-context-3.0.xsd
						http://cxf.apache.org/jaxrs
						http://cxf.apache.org/schemas/jaxrs.xsd
						http://cxf.apache.org/transports/http/configuration
            			http://cxf.apache.org/schemas/configuration/http-conf.xsd
            			http://cxf.apache.org/transports/http-jetty/configuration
            			http://cxf.apache.org/schemas/configuration/http-jetty.xsd"
    default-lazy-init="false">    

    <import resource="classpath:META-INF/cxf/cxf.xml" />            
	
	<context:annotation-config />
    <context:component-scan base-package="com.matzer.db.api"/>  
    
  	<httpj:engine-factory bus="cxf">
    	<httpj:engine port="8000">
      		<httpj:threadingParameters minThreads="1" maxThreads="10" />
      		<httpj:connector>
        		<beans:bean class="org.eclipse.jetty.server.bio.SocketConnector">
           			<beans:property name = "port" value="8000" />
        		</beans:bean>
      		</httpj:connector>
      		<httpj:handlers>
        		<beans:bean class="org.eclipse.jetty.server.handler.DefaultHandler"/>         
      		</httpj:handlers>
      		<httpj:sessionSupport>true</httpj:sessionSupport>
    	</httpj:engine>
  	</httpj:engine-factory>	

  	<jaxrs:server id="service" address="http://localhost:8000/">
        <jaxrs:serviceBeans>
    		<bean class="com.matzer.db.api.rest.impl.AuthenticationService">
    		    <property name="tokenSecurityHandler">
    		        <ref bean="tokenSecurityHandler" />
    		    </property>
			</bean>
			<bean class="com.matzer.db.api.rest.impl.AccountService" />			
        </jaxrs:serviceBeans>
        <jaxrs:extensionMappings>
            <entry key="json" value="application/json" />
        </jaxrs:extensionMappings>	
 		<jaxrs:providers> 		     		   
 		    <bean id="jsonProvider" class="org.apache.cxf.jaxrs.provider.JSONProvider">
 		        <property name="writeXsiType" value="true" />
      			<property name="serializeAsArray" value="true" />
      			<property name="arrayKeys">
        			<list>
        			    <value>array</value>
        			</list>
      			</property>
    		</bean>		     
    		<bean id="customExceptionMapper" class="com.matzer.db.api.service.exception.CustomExceptionMapper" />		   
 		</jaxrs:providers>
 		<jaxrs:inInterceptors>
 		    <ref bean="tokenSecurityHandler" />
			<bean id="jsonInInterceptor" class="org.apache.cxf.jaxrs.provider.jsonp.JsonpInInterceptor" />
 		</jaxrs:inInterceptors>
 		<jaxrs:outInterceptors>
 		    <bean id="jsonPreStreamInterceptor" class="org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor" />
 		    <bean id="jsonPostStreamInterceptor" class="org.apache.cxf.jaxrs.provider.jsonp.JsonpPostStreamInterceptor" />
 		</jaxrs:outInterceptors>
    </jaxrs:server>     	  	
  	
  	<bean id="tokenSecurityHandler" class="com.matzer.db.api.security.impl.TokenSecurityHandler">
  	    <constructor-arg type="int" value="2" />
  	    <property name="authenticationHandler">
  	        <bean id="authenticationHandler" class="com.matzer.db.api.security.impl.AuthenticationHandler" />
  	    </property>
  	    <property name="authorization" value="true" />
  	</bean>
  	
	<bean id="mapper" class="org.dozer.DozerBeanMapper">
  		<property name="mappingFiles">
    		<list>
      			<value>mappings.xml</value>			   
    		</list>
  		</property>
	</bean>	  	    
</beans>